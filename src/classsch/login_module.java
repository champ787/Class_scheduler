/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classsch;

import classsch.Barcode;
import classsch.Barcode2;
import com.sun.glass.events.KeyEvent;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class login_module extends javax.swing.JFrame {

     String id1,pass1;
    /**
     * Creates new form login_module
     */
    public login_module() {
       
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        username = new javax.swing.JTextField();
        javax.swing.JButton Submit = new javax.swing.JButton();
        post = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        getqr = new javax.swing.JButton();
        password1 = new javax.swing.JPasswordField();
        username1 = new java.awt.TextField();
        label1 = new java.awt.Label();
        jLabel2 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        getContentPane().setLayout(null);

        jInternalFrame1.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrame1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jInternalFrame1.setVisible(true);
        jInternalFrame1.getContentPane().setLayout(null);

        username.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        username.setText("USER ID");
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameKeyPressed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(username);
        username.setBounds(195, 460, 168, 41);

        Submit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Submit.setText("Continue");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(Submit);
        Submit.setBounds(229, 548, 108, 39);

        post.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        post.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Head of Department", "Faculty", "Student" }));
        post.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postActionPerformed(evt);
            }
        });
        jInternalFrame1.getContentPane().add(post);
        post.setBounds(158, 388, 237, 43);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsch/college-clipart-animated-college-clipart-1.jpg"))); // NOI18N
        jInternalFrame1.getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 575, 370);

        getContentPane().add(jInternalFrame1);
        jInternalFrame1.setBounds(1270, 90, 560, 790);

        jInternalFrame2.setBackground(new java.awt.Color(255, 255, 255));
        jInternalFrame2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 255), null, null));
        jInternalFrame2.setVisible(true);

        getqr.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        getqr.setText("Get QR");
        getqr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getqrActionPerformed(evt);
            }
        });

        password1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        password1.setText("password");
        password1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password1ActionPerformed(evt);
            }
        });

        username1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        username1.setText("username");

        label1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        label1.setText("Note: Your QRcode will be saved on 'Desktop'");

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(username1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(password1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame2Layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(getqr, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(username1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(getqr, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jInternalFrame2);
        jInternalFrame2.setBounds(680, 330, 340, 300);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/classsch/blur-background-2880x1800-spectrum-electromagnetic-4k-901.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-240, -70, 2340, 1310);

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
          
    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
      String po=post.getSelectedItem().toString();
      if(po.matches("Head Of Department"))  {
      try {
          
          
    Class.forName("com.mysql.jdbc.Driver");
    Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/Class_scheduling","root","9621792087");
   String sql="select * from login_info where   post= '"+po+"' and username=? ;";
    
   PreparedStatement pst=con.prepareStatement(sql);
   
            
        
              pst.setString(1,username.getText());
    
    ResultSet rs=pst.executeQuery();
    if(rs.next())
    {
        JOptionPane.showMessageDialog(null,"user name an password matched");
       id1=username.getText(); 
    
       
        
      facultylogin fac=new facultylogin();
      fac.password.setVisible(true);
      
      
    }
    
else
    {
         JOptionPane.showMessageDialog(null,"user name an password not matched");
     username.setText("");
    
    }
    
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}
 
       
    }//GEN-LAST:event_SubmitActionPerformed
    
  else if(po.matches("Student"))
    {
      try {
          
          
    Class.forName("com.mysql.jdbc.Driver");
    Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/Class_scheduling","root","9621792087");
   String sql="select * from login_info where   post= '"+po+"' and username=? ;";
    
   PreparedStatement pst=con.prepareStatement(sql);
   
            
        
              pst.setString(1,username.getText());
    
    ResultSet rs=pst.executeQuery();
    if(rs.next())
    {
        JOptionPane.showMessageDialog(null,"user name an password matched");
       id1=username.getText(); 
    
       
         JOptionPane.showMessageDialog(null,"user name an password matched");
       id1=username.getText(); 
    
      new StudentLogin().setVisible(true);
      
      
    }
    
else
    {
         JOptionPane.showMessageDialog(null,"user name an password not matched");
     username.setText("");
    
    }
    
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}
        
    }
    }
    public String string;

    /**
     * Get the value of string
     *
     * @return the value of string
     */
    public String getString() {
        return string;
    }

    /**
     * Set the value of string
     *
     * @param string new value of string
     */
    public void setString(String string) {
        this.string = string;
    }


    private void postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postActionPerformed

    private void getqrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getqrActionPerformed
try {
    Class.forName("com.mysql.jdbc.Driver");
    Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/Class_scheduling","root","9621792087");
   String sql="select * from login_info where username=? and password=?";
    PreparedStatement pst=con.prepareStatement(sql);
   
    pst.setString(1, username1.getText());
    pst.setString(2,password1.getText());
    ResultSet rs=pst.executeQuery();
    if(rs.next())
    {
          
     PreparedStatement ps=null;
			Connection connection=null;
			Barcode obj_DBConnection=new Barcode();
			connection=obj_DBConnection.getConnection();
			ResultSet rs1=null;
		try { 
			String query="select * from login_info";
                        
                        ps = connection.prepareStatement(query);
                        
                          rs1=ps.executeQuery();
                         
                           
                          
                          
                          
                          
                          
                          while(rs1.next()){
				Barcode_Image.createImage(rs.getString("mobile")+".png", rs.getString("mobile"));
				Barcode_PDF.createPDF(rs.getString("mobile")+".pdf", rs.getString("mobile"));
				System.out.println("Creating Barcode for "+rs.getString("mobile"));
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(connection!=null){
				try {
						connection.close();
					}
				 catch (Exception e2) {
					e2.printStackTrace();
				}
			}
			if(ps!=null){
				try {
					ps.close();
					}
				 catch (Exception e2) {
					 e2.printStackTrace();
				}
			}
		}
       
    }
else
    {
         JOptionPane.showMessageDialog(null,"user name and password not matched");
     username1.setText("");
     password1.setText("");
    }
    
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}

    }//GEN-LAST:event_getqrActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void password1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_password1ActionPerformed

    private void usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyPressed
 if(evt.getKeyCode()==KeyEvent.VK_ENTER){
         
        String po=post.getSelectedItem().toString();
      if(po.matches("Faculty"))  {
      try {
          
          
    Class.forName("com.mysql.jdbc.Driver");
    Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/Class_scheduling","root","9621792087");
   String sql="select * from login_info where   post= '"+po+"' and username=? ;";
    
   PreparedStatement pst=con.prepareStatement(sql);
   
            
        
              pst.setString(1,username.getText());
    
    ResultSet rs=pst.executeQuery();
    if(rs.next())
    {
        JOptionPane.showMessageDialog(null,"user name an password matched");
       id1=username.getText(); 
    
       
        
      facultylogin fac=new facultylogin();
      fac.password.setVisible(true);
      
      
    }
    
else
    {
         JOptionPane.showMessageDialog(null,"user name an password not matched");
     username.setText("");
    
    }
    
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}
 
       
    }                                      
    
  else if(po.matches("Student"))
    {
      try {
          
          
    Class.forName("com.mysql.jdbc.Driver");
    Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/Class_scheduling","root","9621792087");
   String sql="select * from login_info where   post= '"+po+"' and username=? ;";
    
   PreparedStatement pst=con.prepareStatement(sql);
   
            
        
              pst.setString(1,username.getText());
    
    ResultSet rs=pst.executeQuery();
    if(rs.next())
    {
        JOptionPane.showMessageDialog(null,"user name an password matched");
       id1=username.getText(); 
    
       
         JOptionPane.showMessageDialog(null,"user name an password matched");
       id1=username.getText(); 
    
      StudentLogin stu=new StudentLogin();
      stu.setVisible(true);
      
      
    }
    
else
    {
         JOptionPane.showMessageDialog(null,"user name an password not matched");
     username.setText("");
    
    }
    
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}
        
    }
 
    }//GEN-LAST:event_usernameKeyPressed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
       
      
   
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login_module.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login_module().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton getqr;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private java.awt.Label label1;
    private javax.swing.JPasswordField password1;
    private javax.swing.JComboBox<String> post;
    public static javax.swing.JTextField username;
    private java.awt.TextField username1;
    // End of variables declaration//GEN-END:variables
}
